/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import data.Dice;
import data.TableEntry;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;

/**
 *
 * @author nbp184
 */
public class ItemsPanel extends javax.swing.JPanel {

    final ArrayList<TableEntry> items;
    final ArrayList<String> rollon;
    
    /**
     * Creates new form ItemPanels
     * @param entries
     */
    public ItemsPanel(TableEntry[] entries) {
        initComponents();
        items = new ArrayList<>();
        if(entries != null) {
            HashMap<Integer, TableEntry> locs = new HashMap<>();
            for(TableEntry entry : entries) {
                if(locs.containsKey(entry.hashCode())) {
                    locs.get(entry.hashCode()).appears++;
                } else {
                    locs.put(entry.hashCode(), entry.copy());
                    items.add(locs.get(entry.hashCode()));
                }
            }
        }
        rollon = new ArrayList<>();
        lstRollon.setListData(rollon.toArray());
        lstItems.setListData(items.toArray());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstItems = new javax.swing.JList();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        cbText = new javax.swing.JCheckBox();
        cbDice = new javax.swing.JCheckBox();
        cbUnit = new javax.swing.JCheckBox();
        cbAppears = new javax.swing.JCheckBox();
        txtText = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtSides = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtModifier = new javax.swing.JTextField();
        txtUnit = new javax.swing.JTextField();
        txtAppears = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstRollon = new javax.swing.JList();
        btnAddRollon = new javax.swing.JButton();
        btnSaveRollon = new javax.swing.JButton();
        btnRemoveRollon = new javax.swing.JButton();
        txtRollon = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        lstItems.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstItemsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstItems);

        btnAdd.setText("Add New");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnSave.setText("Save Changes");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        cbText.setBackground(new java.awt.Color(255, 255, 255));
        cbText.setText("text");

        cbDice.setBackground(new java.awt.Color(255, 255, 255));
        cbDice.setText("dice");

        cbUnit.setBackground(new java.awt.Color(255, 255, 255));
        cbUnit.setText("unit");

        cbAppears.setBackground(new java.awt.Color(255, 255, 255));
        cbAppears.setText("appears");

        txtAmount.setColumns(3);
        txtAmount.setText("1");

        jLabel1.setText("d");

        txtSides.setColumns(3);
        txtSides.setText("1");

        jLabel2.setText("+");

        txtModifier.setColumns(3);
        txtModifier.setText("0");

        txtAppears.setColumns(4);

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Roll On"));

        lstRollon.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(lstRollon);

        btnAddRollon.setText("Add New");
        btnAddRollon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRollonActionPerformed(evt);
            }
        });

        btnSaveRollon.setText("Save Changes");
        btnSaveRollon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveRollonActionPerformed(evt);
            }
        });

        btnRemoveRollon.setText("Remove");
        btnRemoveRollon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveRollonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRollon)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddRollon)
                            .addComponent(btnSaveRollon)
                            .addComponent(btnRemoveRollon))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtRollon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddRollon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSaveRollon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveRollon)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtText))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRemove))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbUnit)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtUnit))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cbDice)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtSides, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cbAppears)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtAppears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 124, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtModifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnClear))
                        .addGap(0, 28, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbText)
                            .addComponent(txtText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtModifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbDice)
                                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtSides, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbUnit)
                                    .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbAppears)
                                    .addComponent(txtAppears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave)
                            .addComponent(btnAdd)
                            .addComponent(btnRemove)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        cbText.setSelected(false);
        txtText.setText("");
        rollon.clear();
        lstRollon.setListData(new String[0]);
        txtRollon.setText("");
        cbDice.setSelected(false);
        txtAmount.setText("1");
        txtSides.setText("1");
        txtModifier.setText("0");
        cbUnit.setSelected(false);
        txtUnit.setText("");
        cbAppears.setSelected(false);
        txtAppears.setText("");
        lstItems.clearSelection();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        TableEntry entry = new TableEntry();
        if(cbText.isSelected()) {
            entry.text = txtText.getText();
        }
        if(!rollon.isEmpty()) {
            entry.rollon = new String[rollon.size()];
            rollon.toArray(entry.rollon);
        }
        if(cbDice.isSelected()) {
            entry.die = new Dice(Integer.parseInt(txtAmount.getText()),
                Integer.parseInt(txtSides.getText()),
                Integer.parseInt(txtModifier.getText()));
        }
        if(cbUnit.isSelected()) {
            entry.unit = txtUnit.getText();
        }
        if(cbAppears.isSelected()) {
            entry.appears = Integer.parseInt(txtAppears.getText());
        }
        items.add(entry);
        lstItems.setListData(items.toArray());
        btnClearActionPerformed(null);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if(lstItems.getSelectedIndex() >= 0) {
            TableEntry entry = (TableEntry)lstItems.getSelectedValue();
            if(cbText.isSelected()) {
                entry.text = txtText.getText();
            } else {
                entry.text = null;
            }
            if(!rollon.isEmpty()) {
                entry.rollon = new String[rollon.size()];
                rollon.toArray(entry.rollon);
            } else {
                entry.rollon = null;
            }
            if(cbDice.isSelected()) {
                entry.die = new Dice(Integer.parseInt(txtAmount.getText()),
                    Integer.parseInt(txtSides.getText()),
                    Integer.parseInt(txtModifier.getText()));
            } else {
                entry.die = null;
            }
            if(cbUnit.isSelected()) {
                entry.unit = txtUnit.getText();
            } else {
                entry.unit = null;
            }
            if(cbAppears.isSelected()) {
                entry.appears = Integer.parseInt(txtAppears.getText());
            } else {
                entry.appears = 1;
            }
            lstItems.setListData(items.toArray());
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        if(lstItems.getSelectedIndex() >= 0) {
            TableEntry entry = (TableEntry)lstItems.getSelectedValue();
            items.remove(entry);
            lstItems.setListData(items.toArray());
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void lstItemsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstItemsValueChanged
        TableEntry entry = (TableEntry)lstItems.getSelectedValue();
        if(entry != null) {
            if(entry.text == null) {
                cbText.setSelected(false);
                txtText.setText("");
            } else {
                cbText.setSelected(true);
                txtText.setText(entry.text);
            }
            rollon.clear();
            txtRollon.setText("");
            if(entry.rollon != null) {
                rollon.addAll(Arrays.asList(entry.rollon));
            }
            lstRollon.setListData(rollon.toArray());
            if(entry.die == null) {
                cbDice.setSelected(false);
                txtAmount.setText("1");
                txtSides.setText("1");
                txtModifier.setText("0");
            } else {
                cbDice.setSelected(true);
                txtAmount.setText(""+entry.die.amount);
                txtSides.setText(""+entry.die.sides);
                txtModifier.setText(""+entry.die.modifier);
            }
            if(entry.unit == null) {
                cbUnit.setSelected(false);
                txtUnit.setText("");
            } else {
                cbUnit.setSelected(true);
                txtUnit.setText(entry.unit);
            }
            if(entry.appears == 1) {
                cbAppears.setSelected(false);
                txtAppears.setText("");
            } else {
                cbAppears.setSelected(true);
                txtAppears.setText(""+entry.appears);
            }
        } else {
            btnClearActionPerformed(null);
        }
    }//GEN-LAST:event_lstItemsValueChanged

    private void btnAddRollonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRollonActionPerformed
        rollon.add(txtRollon.getText().trim());
        txtRollon.setText("");
        lstRollon.setListData(rollon.toArray());
    }//GEN-LAST:event_btnAddRollonActionPerformed

    private void btnSaveRollonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveRollonActionPerformed
        if(lstRollon.getSelectedIndex() >= 0) {
            rollon.set(lstRollon.getSelectedIndex(), txtRollon.getText().trim());
            lstRollon.setListData(rollon.toArray());
        }
    }//GEN-LAST:event_btnSaveRollonActionPerformed

    private void btnRemoveRollonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveRollonActionPerformed
        if(lstRollon.getSelectedIndex() >= 0) {
            rollon.remove(lstRollon.getSelectedIndex());
            lstRollon.setListData(rollon.toArray());
        }
    }//GEN-LAST:event_btnRemoveRollonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddRollon;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnRemoveRollon;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveRollon;
    private javax.swing.JCheckBox cbAppears;
    private javax.swing.JCheckBox cbDice;
    private javax.swing.JCheckBox cbText;
    private javax.swing.JCheckBox cbUnit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lstItems;
    private javax.swing.JList lstRollon;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtAppears;
    private javax.swing.JTextField txtModifier;
    private javax.swing.JTextField txtRollon;
    private javax.swing.JTextField txtSides;
    private javax.swing.JTextField txtText;
    private javax.swing.JTextField txtUnit;
    // End of variables declaration//GEN-END:variables
}
